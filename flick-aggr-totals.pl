#!/usr/bin/perl
use strict;
use Getopt::Long;

# usage: perl calc-totals.pl -max=6 -html flick-total-views.log
#   flick-total-views.log is generated by another script
#   if -max omitted all are processed
#   if -html omitted raw text output is printed
#
# (c) T.Przechlewski 11/2007 (tprzechlewski@acm.org)
# One can distribute/modify the file under the terms of the GNU General Public License.
#
# cf. http://gnu.univ.gda.pl/~tomasz/prog/perl/scripts/flickr/scripts/
#
# To do: configuration file (write hash to text file)
#
my ($max_no, $out_format_html);
GetOptions( 'max=i' => \$max_no, 'html' => \$out_format_html,) ;


my ($views, $photo, $url, $p, $out_format, $total_views, $total_photos) ;
my %Photos;
my @NPhotos;
my $MAX = 9999999 ; # Big number
my $fdir = "http://www.flickr.com/photos/tprzechlewski/";

my $out_format = "txt";
my $max = $MAX ;
my $mean = 0;
my $status = '';

if ($out_format_html ) {  $out_format = "html"; }
if ($max_no) {  $max = $max_no }

while (<>) {
    if (/This photo is <b>([a-z]+)<\/b>/) { $status = $1 }

    if (/<p class="Activity">/) { # up to next 2 lines contains usage stat

      $photo = <>; ## get next line

      if ($photo =~ /<b>([0-9]+)<\/b>[ \t]+view/ ) {# photo were viewed 
	$views = $1;
	$photo = <>; ## get next line which contains comments and photo id
	if ( $photo =~ m/href="([^"]+)"/ ) { $url = "$1"; } 
	else { die ("very strange: $photo"); }

      } else {# photos never viewed no need to read extra line 
	if ( $photo =~ m/href="([^"]+)"/ ) { $url = "$1"; }
        else { die ("very strange: $photo"); }

	$views = 0;
      }

      ## only stats of public photos are aggregated:
      $url =~ /.*\/([^\/]+)/; $url = $1;

      if ($status eq "public") { $total_views+= $views; $total_photos++;
	   $Photos{$url}=$views;
      } else { 
	   push @NPhotos, $url; # non-public photos are not counted
      }
    }
}

if ($total_photos > 0)  { $mean =  $total_views / $total_photos ;}
my $grand_totals = "Grand total: $total_views for $total_photos ($mean)";

## ----

my $cp;

$total_views = $total_photos = 0;

if ($out_format =~ /html/) { print "<div>\n"; }

for $p ( sort { $Photos{$b} <=> $Photos{$a} }  keys %Photos ) {
     $total_views+= $Photos{$p} ; $total_photos++;
     if ($out_format =~ /html/) {
       print "<a href='$fdir$p'>$p</a> |\n"; }
     else {
         print "$p  => $Photos{$p}\n"; }
     $cp++;
     if ($cp >= $max ) { last ;}
}

if ($total_photos > 0)  { $mean =  $total_views / $total_photos ;}

if ($out_format =~ /html/) {
    print "</div><div>Total: $total_views for $total_photos (mean: $mean)</div>\n";
    print "<div>$grand_totals</div>\n";
    print "<!-- Warning: $#NPhotos non-public photos were not counted.\n";
    print "Ids of non-public photos: @NPhotos -->\n";
  }
 else {
    print "Total: $total_views for $total_photos (mean: $mean)\n";
    print "$grand_totals\n";
    print "Warning: $#NPhotos non-public photos were not counted.\n";
}
