#!/usr/bin/perl
use strict;
use Getopt::Long;
use Storable;
#
# Print some usage stats for individual pages at flickr.com
#
# usage: perl flickr-report-views.pl <options>
# --------------------------------------
#
# options:
#      -max=<number> = print only <number> top viewed photos
#      -zeros  = print only photos not viewed yet
#      -lagstats  = print differences of views between last and last but one dates
#      -lang  = language (polish/english) to write messages out.
#
# The base file ($log_file, see below) is generated by another script (cf. flick-store-views.pl at
# cf. http://gnu.univ.gda.pl/~tomasz/prog/perl/scripts/flickr/scripts/)
#
# (c) T.Przechlewski 11/2007 (tprzechlewski@acm.org)
# One can distribute/modify the file under the terms of the GNU General Public License.
#
# See also companion scripts: flick-store-views.pl and flick-graph-views.pl
# cf. http://gnu.univ.gda.pl/~tomasz/prog/perl/scripts/flickr/scripts/
#
my $fdir = "http://www.flickr.com/photos/tprzechlewski/"; #
my $log_file = 'flick-views.log';
my $debug = 0; # change to 0 to supress debug
my $max = 25 ; # redefine if not appropriate
my $lang = 'pl'; # ditto

my ($zeros, $lags);

GetOptions( 'max=i' => \$max,
            'zeros' => \$zeros,
	    'lagstats' => \$lags,
	    'lang=s' => \$lang, ) ;

my ($views, $photo, $url, $p, $total_views, $total_photos ) ;
my %PhotoLog ;

if (-f "$log_file") { my $PhotoLogRef ;
   $PhotoLogRef = retrieve("$log_file") || die " *** ERROR: unable to retrieve from $log_file *** ";
   %PhotoLog = %{ $PhotoLogRef } ;
   if ($debug ) { print " >> $log_file OK!\n"; }
} else { %PhotoLog = () ; }

my @Dates = reverse (sort (keys %PhotoLog ));

my $today = $Dates[0];
my %Photos = %{ $PhotoLog{$today}}; # $PhotoLog{$foo} is a reference to hash
my $yesterday ;
my %OPhotos ; # ditto

## ===================================================================================
##
##if ($debug ) { print "*** $today $yesterday *** @Dates\n" }

if ($zeros )  {flick_count_zero($max); }
else {
  if ($max > 0) { flick_photostream_globals($max); }
  if ($lags )   { 
     if ($#Dates < 1 ) { warn " *** INSUFFICIENT DATA ::  " ; exit 0 ; }
     $yesterday = $Dates[1];
     %OPhotos = %{ $PhotoLog{$yesterday}}; # ditto
     flick_period_diff($max);
  }
}
## ===================================================================================
## -------------------------------------------------
## Compute/display global stats
sub flick_photostream_globals {
  my $max = shift ; # how many photos to show
  my $today_ = d2s($today);

  my ($total_views, $total_photos, $max_total_views, $mean, $max_mean, $cpc);

  if ($lang =~ /pl/) {
    print "<p><strong>Zestawienie $max najczê¶ciej ogl±danych</strong> zdjêæ " .
      "z mojej strony (w porz±dku malej±cym, stan na $today_):\n" }
  else { print "<p><strong>$max most viewed photos</strong> from my flickr " .
	   "album (in descending order, at $today_):\n" }

  for $p ( sort { $Photos{$b} <=> $Photos{$a} } keys %Photos ) {

    if ($total_photos < $max ) { $cpc++; $max_total_views += $Photos{$p};  ## total views for max photos
			print "<a href='$fdir$p'>$p ($Photos{$p})</a> |\n"; }
    $total_photos++; 
    $total_views += $Photos{$p};

  }

  $mean = $total_views / $total_photos ;  $max_mean = $max_total_views / $cpc ;

  if ($lang =~ /pl/) {
    printf "<strong>Razem: %d ods³on</strong> (¶rednio: %.2f o/z).\n", $max_total_views, $max_mean ;
    printf "<strong>Ogó³em dla %d zdjêæ: %d</strong> (¶rednio: %.2f o/z).\n", $total_photos, $total_views, $mean;
    print "Uwaga: je¿eli zastanawiasz siê czemu ³±czna liczba ods³on\n" .
      "na rysunku obok nie zgadza siê z ³±czn± liczb± podan± wy¿ej, to <a href='http://gnu.univ.gda.pl/~tomasz/wblog/flickr_hacks.html'>tu jest wyja¶nienie</a>.</p>\n";
  }
  else {
    printf "<strong>Total: %d for %d</strong> (mean: %.2f)\n", $max_total_views, $max, $max_mean ;
    printf "Grand total for %d photos: %d (mean: %.2f v/p)\n", $total_photos, $total_views, $mean;
    print "Note: if someone is curious why total number of views from the picture\n" .
      "significantly differs total number mentioned above, here is <a href='http://www.flickr.com/help/forum/50025/?search=andre'>some explanation</a>.</p>\n";
  }

  ###return ($total_views, $total_photos);

} ## end-of-sub

## -------------------------------------------------
## Print unseen photos:
sub flick_count_zero {
  my $max = shift ; ## print max photos (not implemented)
  my $grand_totals_p = keys %Photos ; ## w±tpliwe
  my $today_ = d2s($today);

  my ($total_photos, $fraction);

  if ($lang =~ /pl/) {
    print "<p>\nSensacja i niepowtarzalna okazja:-) Zestawienie zdjêæ " .
      "nie ogl±danych jeszcze przez nikogo (stan na $today_). B±d¼ pierwszym i klikaj poni¿ej!\n"}
  else { print "<p>\nList of my photos not viewed yet (at $today_). Be the first person to view!\n" }

  for $p ( keys %Photos ) {## do not print views (they are known):
    if ( $Photos{$p} == 0 ) { $total_photos++; print "<a href='$fdir$p'>$p</a> |\n"; }
  }

  ## Some summary stats:
  my $fraction = $total_photos / $grand_totals_p * 100; # proportion of the total

  if ($lang =~ /pl/) {
    printf "</p>\n<p><strong>Razem: %d</strong> (%.1f%% wszystkich) ogl±danych 0 razy.</p>\n", $total_photos, $fraction; }
  else { printf "</p>\n<p><strong>Total: %d photos</strong> (%.1f%% of the whole album) viewed 0 times.</p>\n", $total_photos, $fraction; }

} ### end-of-sub


## -------------------------------------------------
sub flick_period_diff {
   my $max = shift ; # how many photos to show
   my ($total_views, $total_photos, $mean, $cp);
   my $period = sprintf "%s -- %s", d2s ($yesterday), d2s($today);
   my %MPhotos; # Hash for 'modified' photos

   #if ($debug) { my @tmp = (%OPhotos); print  "@tmp\n"; }

   ## Iterate: register 'modified' photos in hash 'MPhotos'
   for $p ( keys %Photos ) {

     # There exist $p photo but no new views were registered (skip):
     if ( exists $OPhotos{$p}) {

       my $diff = $Photos{$p} - $OPhotos{$p};

       if ( $diff == 0 ) { next }

       else { $MPhotos{$p} = $diff ; $total_photos++; } 
     } else { 
       if ( $Photos{$p} > 0 ) {
	 $MPhotos{$p} = $Photos{$p} ;
	 $total_photos++;
       }
     }
       $total_views+= $MPhotos{$p} ;

   }

   if ($total_photos > 0)  { $mean =  $total_views / $total_photos ;}

   #if ($lang =~ /pl/) {
   #  print "<p><strong>Zestawienie $max najczê¶ciej ogl±danych</strong> zdjêæ " .
   #    "z mojej strony (w porz±dku malej±cym, stan na $period):\n" }
   #else { print "<p><strong>$max most viewed photos</strong> from my flickr " .
   #	    "album (in descending order, at $period):\n" }

   my $max_MPhotos =  $total_photos > $max ? $max : $total_photos;

   if ( ! (%MPhotos) ) { 

     if ($lang =~ /pl/) { print "Nie by³o nowych ods³on w okresie $period)!</p>\n"; }
     else { print "Seems there were no new views/photos from/to $period!</p>\n"; }
   }
   else {

     if ($lang =~ /pl/) {
       print "\n<p><strong>Zestawienie $max_MPhotos najczê¶ciej ogl±danych</strong> zdjêæ " .
	 "z mojej strony (w porz±dku malej±cym, w okresie $period):\n"; }
     else { print "\n<p><strong>$max_MPhotos most viewed photos</strong> from my flickr album " .
	      "(in descending order, from/to $period):\n"; }

     for $p ( sort { $MPhotos{$b} <=> $MPhotos{$a} }  keys %MPhotos ) {
       print "<a href='$fdir$p'>$p ($MPhotos{$p})</a> |\n"; $cp++;
       if ($cp >= $max ) { last }
     }

     if ($total_photos > 0)  { $mean =  $total_views / $total_photos ;}

     if ($lang =~ /pl/) {
       printf "<strong>Razem: %d ods³on %d zdjêæ</strong> (¶rednia: %.2f o/z).</p>\n", 
          $total_views,  $total_photos, $mean ;
       }
       else { printf "<strong>Total: %d views for %d photos</strong> (mean: %.2f v/p).</p>\n",
          $total_views,  $total_photos, $mean ;
       }
   }

}## end-of-sub


## --------------------------------------------
##
sub d2s {# return formatted date:
  my $s = shift;
  return ( substr($s,0,4) . "-" . substr($s,4,2) . "-" . substr($s,6,2)	 . 
	   "T" . substr($s,8,2) . ":" . substr($s,10,2));
}

## eof ##
