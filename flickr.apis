http://www.flickr.com/services/api/flickr.photosets.addPhoto.html
flickr.photosets.addPhoto : Add a photo to the end of an existing photoset.
Arguments: 
api_key (Required)
    Your API application key. See here for more details.
photoset_id (Required)
    The id of the photoset to add a photo to.
photo_id (Required)
    The id of the photo to add to the set. 

=======================================================================================
http://www.flickr.com/services/api/flickr.photosets.getPhotos.html
flickr.photosets.getPhotos
Get the list of photos in a set.
Authentication

This method does not require authentication.
Arguments

api_key (Required)
    Your API application key. See here for more details.
photoset_id (Required)
    The id of the photoset to return the photos for.
extras (Optional)
    A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update.
privacy_filter (Optional)
    Return photos only matching a certain privacy level. This only applies when making an authenticated call to view a photoset you own. Valid values are:

        * 1 public photos
        * 2 private photos visible to friends
        * 3 private photos visible to family
        * 4 private photos visible to friends & family
        * 5 completely private photos


=======================================================================================
http://www.flickr.com/services/api/flickr.photos.geo.getLocation.html

flickr.photos.geo.getLocation
Get the geo data (latitude and longitude and the accuracy level) for a photo.
Authentication

This method does not require authentication.
Arguments

api_key (Required)
    Your API application key. See here for more details.
photo_id (Required)
    The id of the photo you want to retrieve location data for. 

===================================================================================
http://www.flickr.com/services/api/flickr.photos.geo.setLocation.html
flickr.photos.geo.setLocation
Sets the geo data (latitude and longitude and, optionally, the accuracy level) for a photo. Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at http://www.flickr.com/account/geo/privacy/. If a user has not set this preference, the API method will return an error.
Authentication

This method requires authentication with 'write' permission.

Note: This method requires an HTTP POST request.
Arguments

api_key (Required)
    Your API application key. See here for more details.
photo_id (Required)
    The id of the photo to set location data for.
lat (Required)
    The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated.
lon (Required)
    The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated.
accuracy (Optional)
    Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 

===================================================================================================

flickr.photos.addTags
Add tags to a photo.
Authentication

This method requires authentication with 'write' permission.

Note: This method requires an HTTP POST request.
Arguments

api_key (Required)
    Your API application key. See here for more details.
photo_id (Required)
    The id of the photo to add tags to.
tags (Required)
    The tags to add to the photo. 

======================================================================================================

flickr.people.getPublicPhotos
Get a list of public photos for the given user.
Authentication

This method does not require authentication.
Arguments

api_key (Required)
    Your API application key. See here for more details.
user_id (Required)
    The NSID of the user who's photos to return.
extras (Optional)
    A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo.
per_page (Optional)
    Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.
page (Optional)
    The page of results to return. If this argument is omitted, it defaults to 1. 


===============================================================================================

flickr.photos.getWithGeoData
Returns a list of your geo-tagged photos.
Authentication

This method requires authentication with 'read' permission.
Arguments

api_key (Required)
    Your API application key. See here for more details.
min_upload_date (Optional)
    Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.
max_upload_date (Optional)
    Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.
min_taken_date (Optional)
    Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.
max_taken_date (Optional)
    Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.
privacy_filter (Optional)
    Return photos only matching a certain privacy level. Valid values are:

        * 1 public photos
        * 2 private photos visible to friends
        * 3 private photos visible to family
        * 4 private photos visible to friends & family
        * 5 completely private photos

sort (Optional)
    The order in which to sort returned photos. Deafults to date-posted-desc. The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, and interestingness-asc.
extras (Optional)
    A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo.
per_page (Optional)
    Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.
page (Optional)
    The page of results to return. If this argument is omitted, it defaults to 1.

Example Response

This method returns the standard photo list xml:

<photos page="2" pages="89" perpage="10" total="881">
	<photo id="2636" owner="47058503995@N01" 
		secret="a123456" server="2" title="test_04"
		ispublic="1" isfriend="0" isfamily="0" />
	<photo id="2635" owner="47058503995@N01"
		secret="b123456" server="2" title="test_03"
		ispublic="0" isfriend="1" isfamily="1" />
	<photo id="2633" owner="47058503995@N01"
		secret="c123456" server="2" title="test_01"
		ispublic="1" isfriend="0" isfamily="0" />
	<photo id="2610" owner="12037949754@N01"
		secret="d123456" server="2" title="00_tall"
		ispublic="1" isfriend="0" isfamily="0" />
</photos>

To map <photo> elements to urls, please read the url documentation.




